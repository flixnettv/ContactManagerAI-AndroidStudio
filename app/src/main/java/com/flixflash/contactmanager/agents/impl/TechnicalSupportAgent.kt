package com.flixflash.contactmanager.agents.impl

import android.util.Log
import com.flixflash.contactmanager.agents.*

/**
 * ูููู ุงูุฏุนู ุงูุชููู - ูุญู ุงููุดุงูู ุงูุชูููุฉ ูุงูุชุทุจููุงุช
 * ูุชุฎุตุต ูู ุญู ุงููุดุงูู ุงูุชูููุฉ ูุชูุฏูู ุงูุญููู ุงูุนูููุฉ
 */
class TechnicalSupportAgent(
    id: String,
    name: String,
    description: String,
    intelligenceLevel: Int,
    voiceType: String,
    activeHours: String,
    capabilities: List<String>
) : Agent(
    id = id,
    name = name,
    description = description,
    intelligenceLevel = intelligenceLevel,
    voiceType = voiceType,
    activeHours = activeHours,
    capabilities = capabilities,
    category = AgentCategory.SPECIALIZED
) {
    
    private val TAG = "TechnicalSupportAgent"
    
    // ูุงุนุฏุฉ ุจูุงูุงุช ุงููุดุงูู ูุงูุญููู ุงูุดุงุฆุนุฉ
    private val commonProblems = mapOf(
        // ูุดุงูู ุงูุชุทุจูู
        "ุงูุชุทุจูู ูุง ูุนูู" to "ุฌุฑุจ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุทุจูู ุฃู ุฅุนุงุฏุฉ ุชุดุบูู ุงููุงุชู",
        "ุงูุชุทุจูู ุจุทูุก" to "ุฃุบูู ุงูุชุทุจููุงุช ุงูุฃุฎุฑู ูุชุฃูุฏ ูู ูุฌูุฏ ุฐุงูุฑุฉ ูุงููุฉ",
        "ุงูุตูุช ูุง ูุนูู" to "ุชุญูู ูู ุฃุฐููุงุช ุงููููุฑูููู ูุชุฃูุฏ ูู ุนุฏู ูุชู ุงูุตูุช",
        "ูุง ูุชุนุฑู ุนูู ุตูุชู" to "ุฌุฑุจ ุงูุชุญุฏุซ ุจูุถูุญ ุฃูุจุฑ ุฃู ุฅุนุงุฏุฉ ุชุฏุฑูุจ ุงููููุฐุฌ ุงูุตูุชู",
        
        // ูุดุงูู ุงููุงุชู
        "ุงููุงุชู ุจุทูุก" to "ุงูุณุญ ุงููููุงุช ุงููุคูุชุฉ ูุฃุนุฏ ุชุดุบูู ุงููุงุชู",
        "ุงูุจุทุงุฑูุฉ ุชููุฏ ุจุณุฑุนุฉ" to "ุฃุบูู ุงูุชุทุจููุงุช ุบูุฑ ุงููุณุชุฎุฏูุฉ ูููู ุณุทูุน ุงูุดุงุดุฉ",
        "ูููุด ูุณุงุญุฉ" to "ุงูุณุญ ุงููููุงุช ุบูุฑ ุงููููุฉ ุฃู ุงููู ุงูุตูุฑ ููุณุญุงุจุฉ",
        "ุงูุฅูุชุฑูุช ุจุทูุก" to "ุชุญูู ูู ููุฉ ุงูุฅุดุงุฑุฉ ุฃู ุฌุฑุจ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฑุงูุชุฑ",
        
        // ูุดุงูู ุงูููุงููุงุช
        "ูุด ุจุณูุน ุงููุชุตู" to "ุงุฑูุน ูุณุชูู ุงูุตูุช ุฃู ุฌุฑุจ ุณูุงุนุงุช ุงูุฃุฐู",
        "ุงููุชุตู ูุด ุจูุณูุนูู" to "ุชุญูู ูู ุงููููุฑูููู ูุชุฃูุฏ ูู ุนุฏู ุชุบุทูุชู",
        "ุงูููุงููุฉ ุชูุทุน" to "ุชุญูู ูู ููุฉ ุงูุดุจูุฉ ุฃู ุฌุฑุจ ููุงู ุขุฎุฑ",
        
        // ูุดุงูู ุฌูุงุช ุงูุงุชุตุงู
        "ูุด ูุงูู ุฌูุฉ ุงูุงุชุตุงู" to "ุฌุฑุจ ุงูุจุญุซ ุจุงุณู ูุฎุชูู ุฃู ุชุญูู ูู ุงููุฒุงููุฉ",
        "ุงูุฃุฑูุงู ูุด ุธุงูุฑุฉ" to "ุชุญูู ูู ุฃุฐููุงุช ุฌูุงุช ุงูุงุชุตุงู",
        
        // ูุดุงูู ุนุงูุฉ
        "ุงูุชุทุจูู ูููู" to "ุชุญุฏูุซ ุงูุชุทุจูู ุฃู ูุณุญ ุงููุงุด",
        "ุฑุณุงูุฉ ุฎุทุฃ" to "ุงุนูู ููุทุฉ ุดุงุดุฉ ููุฎุทุฃ ูุฃุฑุณููุง ููุฏุนู ุงูุชููู"
    )
    
    // ูููุงุช ููุชุงุญูุฉ ููุชุนุฑู ุนูู ุงููุดุงูู ุงูุชูููุฉ
    private val problemKeywords = listOf(
        "ูุดููุฉ", "ุฎุทุฃ", "ุนุทู", "ูุด ุดุบุงู", "ูุง ูุนูู", "ุจุทูุก", "ูุด ุจูุดุชุบู",
        "problem", "error", "issue", "bug", "crash", "slow", "not working"
    )
    
    private val solutionKeywords = listOf(
        "ุญู", "ุฅุตูุงุญ", "ุณุงุนุฏูู", "ุฅุฒุงู", "ููู", "solution", "fix", "help", "how"
    )
    
    override fun canHandle(request: String): Boolean {
        val requestLower = request.lowercase()
        
        return problemKeywords.any { requestLower.contains(it) } ||
                solutionKeywords.any { requestLower.contains(it) } ||
                requestLower.contains("ุชููู") ||
                requestLower.contains("technical") ||
                requestLower.contains("support") ||
                requestLower.contains("ุฏุนู") ||
                commonProblems.keys.any { requestLower.contains(it.lowercase()) }
    }
    
    override suspend fun handleSpecificRequest(request: String, context: CallContext): AgentResponse {
        val requestLower = request.lowercase()
        
        Log.d(TAG, "๐ง ูุนุงูุฌุฉ ูุดููุฉ ุชูููุฉ: $request")
        
        return when {
            // ุงูุจุญุซ ุนู ุญู ูููุดููุฉ
            problemKeywords.any { requestLower.contains(it) } -> {
                findSolutionForProblem(request, context)
            }
            
            // ุทูุจ ูุณุงุนุฏุฉ ุนุงูุฉ
            solutionKeywords.any { requestLower.contains(it) } -> {
                provideGeneralTechnicalHelp(request, context)
            }
            
            // ุงุณุชูุณุงุฑุงุช ุชูููุฉ ุนุงูุฉ
            else -> {
                handleGeneralTechnicalQuery(request, context)
            }
        }
    }
    
    /**
     * ุงูุจุญุซ ุนู ุญู ููุดููุฉ ูุญุฏุฏุฉ
     */
    private suspend fun findSolutionForProblem(request: String, context: CallContext): AgentResponse {
        val requestLower = request.lowercase()
        
        // ุงูุจุญุซ ูู ูุงุนุฏุฉ ุจูุงูุงุช ุงููุดุงูู ุงูุดุงุฆุนุฉ
        for ((problem, solution) in commonProblems) {
            if (requestLower.contains(problem.lowercase())) {
                return AgentResponse(
                    success = true,
                    message = "๐ง ูููุช ุงูุญู!\n\nโ ุงููุดููุฉ: $problem\nโ ุงูุญู: $solution\n\nุฌุฑุจ ุงูุญู ุฏู ููููู ูู ุงุดุชุบู ูุนุงู.",
                    agentId = id,
                    confidence = 0.9f,
                    data = mapOf(
                        "problem" to problem,
                        "solution" to solution
                    ),
                    suggestions = listOf(
                        "ุงูุญู ุงุดุชุบู ูุนุงูุง",
                        "ูุณู ูููุด ูุงูุฏุฉ",
                        "ุนุงูุฒ ุญู ุชุงูู"
                    )
                )
            }
        }
        
        // ุฅุฐุง ูู ุชูุฌุฏ ูุดููุฉ ูุทุงุจูุฉุ ูุฏู ุญููู ุนุงูุฉ
        return when {
            requestLower.contains("ุจุทูุก") || requestLower.contains("slow") -> {
                AgentResponse(
                    success = true,
                    message = "๐ ูุดููุฉ ุงูุจุทุก ูููู ุชุญู ุจุงูุทุฑู ุฏู:\n\n1๏ธโฃ ุฃุนุฏ ุชุดุบูู ุงููุงุชู\n2๏ธโฃ ุฃุบูู ุงูุชุทุจููุงุช ุงููู ูุด ุจุชุณุชุฎุฏููุง\n3๏ธโฃ ุงูุณุญ ุงููุงุด ูู ุงูุฅุนุฏุงุฏุงุช\n4๏ธโฃ ุชุฃูุฏ ูู ูุฌูุฏ ูุณุงุญุฉ ูุงุฑุบุฉ ูุงููุฉ\n\nุฃู ุทุฑููุฉ ุฌุฑุจุชูุงุ",
                    agentId = id,
                    confidence = 0.85f,
                    suggestions = listOf("ุฌุฑุจุช ุฅุนุงุฏุฉ ุงูุชุดุบูู", "ูุณุญุช ุงููุงุด", "ุนุงูุฒ ูุณุงุนุฏุฉ ุชุงููุฉ")
                )
            }
            
            requestLower.contains("ูููู") || requestLower.contains("crash") -> {
                AgentResponse(
                    success = true,
                    message = "๐ฅ ูุดููุฉ ุฅููุงู ุงูุชุทุจูู:\n\n1๏ธโฃ ุญุฏุซ ุงูุชุทุจูู ูุขุฎุฑ ุฅุตุฏุงุฑ\n2๏ธโฃ ุงูุณุญ ุจูุงูุงุช ุงูุชุทุจูู\n3๏ธโฃ ุฃุนุฏ ุชุซุจูุช ุงูุชุทุจูู\n4๏ธโฃ ุชุฃูุฏ ูู ุชูุงูู ุงููุงุชู\n\nุฌุฑุจ ุงูุฎุทูุงุช ุฏู ุจุงูุชุฑุชูุจ.",
                    agentId = id,
                    confidence = 0.88f,
                    suggestions = listOf("ุญุฏุซุช ุงูุชุทุจูู", "ูุณุญุช ุงูุจูุงูุงุช", "ูุณู ุจูููู")
                )
            }
            
            requestLower.contains("ุตูุช") || requestLower.contains("voice") || requestLower.contains("audio") -> {
                AgentResponse(
                    success = true,
                    message = "๐ ูุดุงูู ุงูุตูุช:\n\n1๏ธโฃ ุชุญูู ูู ุฃุฐููุงุช ุงููููุฑูููู\n2๏ธโฃ ุชุฃูุฏ ูู ุนุฏู ูุชู ุงูุตูุช\n3๏ธโฃ ุฌุฑุจ ุณูุงุนุงุช ุงูุฃุฐู\n4๏ธโฃ ุฃุนุฏ ุชุดุบูู ุงูุชุทุจูู\n5๏ธโฃ ุชุฃูุฏ ูู ุนุฏู ุชุบุทูุฉ ุงููููุฑูููู\n\nุฃู ุฎุทูุฉ ูุญุชุงุฌ ุชูุงุตูู ุฃูุชุฑ ุนููุงุ",
                    agentId = id,
                    confidence = 0.92f,
                    suggestions = listOf("ุฅุฒุงู ุฃุชุญูู ูู ุงูุฃุฐููุงุชุ", "ุงููููุฑูููู ูููุ", "ุฌุฑุจุช ูู ุญุงุฌุฉ")
                )
            }
            
            else -> {
                AgentResponse(
                    success = true,
                    message = "๐ค ูุด ูุงุฏุฑ ุฃุญุฏุฏ ุงููุดููุฉ ุจุงูุถุจุท. ูููู ุชูุตููู ุงููุดููุฉ ุฃูุชุฑุ\n\nูุซูุงู:\nโข 'ุงูุชุทุจูู ุจุทูุก'\nโข 'ุงูุตูุช ูุด ุดุบุงู'\nโข 'ุงูุชุทุจูู ุจูููู'\nโข 'ูุด ุจุณูุน ุงููุชุตู'",
                    agentId = id,
                    confidence = 0.6f,
                    suggestions = listOf(
                        "ุงูุชุทุจูู ูุด ุดุบุงู",
                        "ูุดููุฉ ูู ุงูุตูุช",
                        "ุงููุงุชู ุจุทูุก",
                        "ูุดููุฉ ูู ุงูููุงููุงุช"
                    )
                )
            }
        }
    }
    
    /**
     * ุชูุฏูู ูุณุงุนุฏุฉ ุชูููุฉ ุนุงูุฉ
     */
    private suspend fun provideGeneralTechnicalHelp(request: String, context: CallContext): AgentResponse {
        return AgentResponse(
            success = true,
            message = "๐ง ูุฑุญุจุงู! ุฃูุง ุงูุฏุนู ุงูุชููู ูู FlixFlash Contact Manager AI\n\nูููู ุฃุณุงุนุฏู ูู:\n\n๐ง ุญู ุงููุดุงูู ุงูุชูููุฉ\n๐ฑ ูุดุงูู ุงูุชุทุจูู\n๐ ูุดุงูู ุงูุตูุช ูุงูููุงููุงุช\nโ๏ธ ุฅุนุฏุงุฏุงุช ุงููุธุงู\n๐ก๏ธ ุงูุฃูุงู ูุงูุฎุตูุตูุฉ\n\nุฅูู ุงููุดููุฉ ุงููู ูุงุฌูุชูุ",
            agentId = id,
            confidence = 0.9f,
            suggestions = listOf(
                "ุงูุชุทุจูู ูุด ุดุบุงู",
                "ูุดููุฉ ูู ุงูุตูุช", 
                "ุงููุงุชู ุจุทูุก",
                "ูุดููุฉ ูู ุงูุฃูุงู"
            )
        )
    }
    
    /**
     * ุงูุชุนุงูู ูุน ุงูุงุณุชูุณุงุฑุงุช ุงูุชูููุฉ ุงูุนุงูุฉ
     */
    private suspend fun handleGeneralTechnicalQuery(request: String, context: CallContext): AgentResponse {
        val requestLower = request.lowercase()
        
        return when {
            requestLower.contains("ุฅุนุฏุงุฏุงุช") || requestLower.contains("settings") -> {
                AgentResponse(
                    success = true,
                    message = "โ๏ธ ูููุตูู ููุฅุนุฏุงุฏุงุช:\n\n1๏ธโฃ ุงูุชุญ ุงูุชุทุจูู\n2๏ธโฃ ุงุถุบุท ุนูู ุฃููููุฉ ุงูุฅุนุฏุงุฏุงุช โ๏ธ\n3๏ธโฃ ุงุฎุชุฑ ุงููุณู ุงููุทููุจ:\n   โข ุฅุนุฏุงุฏุงุช ุงูุตูุช ๐\n   โข ุฅุนุฏุงุฏุงุช ุงููููุงุก ๐ค\n   โข ุฅุนุฏุงุฏุงุช ุงูุฃูุงู ๐ก๏ธ\n   โข ุฅุนุฏุงุฏุงุช ุงููุงุฌูุฉ ๐จ",
                    agentId = id,
                    confidence = 0.9f,
                    suggestions = listOf("ุฅุนุฏุงุฏุงุช ุงูุตูุช", "ุฅุนุฏุงุฏุงุช ุงููููุงุก", "ุฅุนุฏุงุฏุงุช ุงูุฃูุงู")
                )
            }
            
            requestLower.contains("ุชุญุฏูุซ") || requestLower.contains("update") -> {
                AgentResponse(
                    success = true,
                    message = "๐ ููุชุญุฏูุซ:\n\n1๏ธโฃ ุงูุชุญ Google Play Store\n2๏ธโฃ ุงุจุญุซ ุนู 'FlixFlash Contact Manager AI'\n3๏ธโฃ ุงุถุบุท 'ุชุญุฏูุซ' ุฅุฐุง ูุงู ูุชุงุญ\n\nุฃู:\nโข ุงูุชุญุฏูุซุงุช ุงูุชููุงุฆูุฉ ููุนูุฉ ูู ุงูุชุทุจูู\nโข ุณุชุญุตู ุนูู ุฅุดุนุงุฑ ุนูุฏ ุชููุฑ ุชุญุฏูุซ ุฌุฏูุฏ",
                    agentId = id,
                    confidence = 0.9f,
                    suggestions = listOf("ููู ุฅุนุฏุงุฏุงุช ุงูุชุญุฏูุซุ", "ุฅุฒุงู ุฃูุนู ุงูุชุญุฏูุซ ุงูุชููุงุฆูุ")
                )
            }
            
            requestLower.contains("ุฃุฐููุงุช") || requestLower.contains("permissions") -> {
                AgentResponse(
                    success = true,
                    message = "๐ ุฅุฏุงุฑุฉ ุงูุฃุฐููุงุช:\n\n1๏ธโฃ ุงุฐูุจ ูุฅุนุฏุงุฏุงุช ุงููุงุชู\n2๏ธโฃ ุงุฎุชุฑ 'ุงูุชุทุจููุงุช'\n3๏ธโฃ ุงุจุญุซ ุนู 'FlixFlash Contact Manager AI'\n4๏ธโฃ ุงุถุบุท 'ุงูุฃุฐููุงุช'\n5๏ธโฃ ูุนูู ุงูุฃุฐููุงุช ุงููุทููุจุฉ:\n   ๐ ุงูููุงููุงุช\n   ๐ฅ ุฌูุงุช ุงูุงุชุตุงู\n   ๐ค ุงููููุฑูููู\n   ๐ ุงูุชุฎุฒูู",
                    agentId = id,
                    confidence = 0.95f,
                    suggestions = listOf("ุฃู ุฃุฐููุงุช ูุทููุจุฉุ", "ุฅุฒุงู ุฃูุนู ุฃุฐููุงุช ุงูููุงููุงุชุ")
                )
            }
            
            requestLower.contains("ุฃูุงู") || requestLower.contains("security") || requestLower.contains("ุญูุงูุฉ") -> {
                AgentResponse(
                    success = true,
                    message = "๐ก๏ธ ููุฒุงุช ุงูุฃูุงู ูู ุงูุชุทุจูู:\n\nโ ุชุดููุฑ AES-256 ูุญูู\nโ ุงูุจูุงูุงุช ูุง ุชุบุงุฏุฑ ุฌูุงุฒู\nโ ูุดู ุงูููุงููุงุช ุงููุดุจููุฉ\nโ ุญูุงูุฉ ูู ุงููุตุจ ุงููุงุชูู\nโ ุชุญูู ูุงูู ูู ุงูุฎุตูุตูุฉ\n\nูู ุจูุงูุงุชู ุขููุฉ ููุญููุฉ!",
                    agentId = id,
                    confidence = 0.95f,
                    suggestions = listOf("ุฅุฒุงู ุฃุดูู ุฅุนุฏุงุฏุงุช ุงูุฃูุงูุ", "ุฅุฒุงู ุฃุจูุบ ุนู ููุงููุฉ ูุดุจููุฉุ")
                )
            }
            
            requestLower.contains("ูุณุฎ ุงุญุชูุงุทู") || requestLower.contains("backup") -> {
                AgentResponse(
                    success = true,
                    message = "๐พ ุงููุณุฎ ุงูุงุญุชูุงุทู:\n\n1๏ธโฃ ุงุฐูุจ ููุฅุนุฏุงุฏุงุช\n2๏ธโฃ ุงุฎุชุฑ 'ุงููุณุฎ ุงูุงุญุชูุงุทู'\n3๏ธโฃ ูุนูู 'ุงููุณุฎ ุงูุชููุงุฆู'\n4๏ธโฃ ุงุฎุชุฑ ููุงู ุงูุญูุธ:\n   โ๏ธ Google Drive\n   ๐ฑ ุงูุชุฎุฒูู ุงููุญูู\n   ๐พ ุจุทุงูุฉ SD\n\nุจูุงูุงุชู ูุญููุธุฉ ููุดูุฑุฉ!",
                    agentId = id,
                    confidence = 0.9f,
                    suggestions = listOf("ุฅุฒุงู ุฃุนูู ูุณุฎ ุงุญุชูุงุทู ูุฏููุ", "ุฅุฒุงู ุฃุณุชุฑุฌุน ุงูุจูุงูุงุชุ")
                )
            }
            
            else -> {
                AgentResponse(
                    success = true,
                    message = "๐ง ูุฑุญุจุงู! ุฃูุง ุงูุฏุนู ุงูุชููู ูู FlixFlash\n\nูููู ุฃุณุงุนุฏู ูู:\nโข ุญู ูุดุงูู ุงูุชุทุจูู ๐ฑ\nโข ูุดุงูู ุงูุตูุช ูุงูููุงููุงุช ๐\nโข ุฅุนุฏุงุฏุงุช ุงููุธุงู โ๏ธ\nโข ุงูุฃูุงู ูุงูุฎุตูุตูุฉ ๐ก๏ธ\nโข ุงููุณุฎ ุงูุงุญุชูุงุทู ๐พ\n\nุฅูู ุงููุดููุฉ ุงููู ูุญุชุงุฌ ุญู ููุงุ",
                    agentId = id,
                    confidence = 0.8f,
                    suggestions = listOf(
                        "ุงูุชุทุจูู ูุด ุดุบุงู",
                        "ูุดููุฉ ูู ุงูุตูุช",
                        "ุฅุนุฏุงุฏุงุช ุงูุฃูุงู",
                        "ุงููุณุฎ ุงูุงุญุชูุงุทู"
                    )
                )
            }
        }
    }
    
    /**
     * ุชูุฏูู ุชุดุฎูุต ูุชูุฏู ูููุดููุฉ
     */
    fun diagnoseProblem(problemDescription: String): TechnicalDiagnosis {
        val description = problemDescription.lowercase()
        
        val severity = when {
            description.contains("ูููู") || description.contains("crash") -> ProblemSeverity.HIGH
            description.contains("ุจุทูุก") || description.contains("slow") -> ProblemSeverity.MEDIUM
            description.contains("ุตูุช") || description.contains("voice") -> ProblemSeverity.MEDIUM
            else -> ProblemSeverity.LOW
        }
        
        val category = when {
            description.contains("ุตูุช") || description.contains("ููุงููุฉ") -> ProblemCategory.AUDIO
            description.contains("ุจุทูุก") || description.contains("ุฐุงูุฑุฉ") -> ProblemCategory.PERFORMANCE
            description.contains("ุฃูุงู") || description.contains("ุญูุงูุฉ") -> ProblemCategory.SECURITY
            description.contains("ูุงุฌูุฉ") || description.contains("ุดุงุดุฉ") -> ProblemCategory.UI
            else -> ProblemCategory.GENERAL
        }
        
        val estimatedFixTime = when (severity) {
            ProblemSeverity.HIGH -> "5-10 ุฏูุงุฆู"
            ProblemSeverity.MEDIUM -> "2-5 ุฏูุงุฆู"
            ProblemSeverity.LOW -> "1-2 ุฏูููุฉ"
        }
        
        return TechnicalDiagnosis(
            problemDescription = problemDescription,
            severity = severity,
            category = category,
            estimatedFixTime = estimatedFixTime,
            recommendedSteps = getRecommendedSteps(category, severity)
        )
    }
    
    /**
     * ุงูุญุตูู ุนูู ุฎุทูุงุช ุงูุญู ุงููููุตู ุจูุง
     */
    private fun getRecommendedSteps(category: ProblemCategory, severity: ProblemSeverity): List<String> {
        return when (category) {
            ProblemCategory.AUDIO -> listOf(
                "ุชุญูู ูู ุฃุฐููุงุช ุงููููุฑูููู",
                "ุชุฃูุฏ ูู ุนุฏู ูุชู ุงูุตูุช",
                "ุฌุฑุจ ุณูุงุนุงุช ุงูุฃุฐู",
                "ุฃุนุฏ ุชุดุบูู ุงูุชุทุจูู"
            )
            
            ProblemCategory.PERFORMANCE -> listOf(
                "ุฃุบูู ุงูุชุทุจููุงุช ุงูุฃุฎุฑู",
                "ุฃุนุฏ ุชุดุบูู ุงููุงุชู",
                "ุงูุณุญ ุงููุงุด",
                "ุชุญูู ูู ุงููุณุงุญุฉ ุงููุชุงุญุฉ"
            )
            
            ProblemCategory.SECURITY -> listOf(
                "ุชุญูู ูู ุฅุนุฏุงุฏุงุช ุงูุฃูุงู",
                "ูุนูู ุงูุชุดููุฑ",
                "ุฑุงุฌุน ููุงุฆู ุงูุญุธุฑ",
                "ุญุฏุซ ุงูุชุทุจูู"
            )
            
            ProblemCategory.UI -> listOf(
                "ุฃุนุฏ ุชุดุบูู ุงูุชุทุจูู",
                "ุชุญูู ูู ุฅุนุฏุงุฏุงุช ุงูุนุฑุถ",
                "ุฌุฑุจ ุซูู ูุฎุชูู",
                "ุฃุนุฏ ุชุนููู ุงูุฅุนุฏุงุฏุงุช"
            )
            
            ProblemCategory.GENERAL -> listOf(
                "ุฃุนุฏ ุชุดุบูู ุงูุชุทุจูู",
                "ุชุญูู ูู ุงูุชุญุฏูุซุงุช",
                "ุฃุนุฏ ุชุดุบูู ุงููุงุชู",
                "ุชูุงุตู ูุน ุงูุฏุนู ุงูุชููู"
            )
        }
    }
}

/**
 * ุชุดุฎูุต ุชููู ูููุดููุฉ
 */
data class TechnicalDiagnosis(
    val problemDescription: String,
    val severity: ProblemSeverity,
    val category: ProblemCategory,
    val estimatedFixTime: String,
    val recommendedSteps: List<String>
)

/**
 * ูุณุชูู ุฎุทูุฑุฉ ุงููุดููุฉ
 */
enum class ProblemSeverity {
    LOW,    // ููุฎูุถ
    MEDIUM, // ูุชูุณุท
    HIGH    // ุนุงูู
}

/**
 * ูุฆุฉ ุงููุดููุฉ ุงูุชูููุฉ
 */
enum class ProblemCategory {
    AUDIO,       // ุตูุช
    PERFORMANCE, // ุฃุฏุงุก
    SECURITY,    // ุฃูุงู
    UI,          // ูุงุฌูุฉ
    GENERAL      // ุนุงู
}