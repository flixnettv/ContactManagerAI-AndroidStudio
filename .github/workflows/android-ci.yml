name: android-ci-min

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-deliver:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install Android SDK (cmdline-tools)
        run: |
          set -euxo pipefail
          export ANDROID_SDK_ROOT="$HOME/android-sdk"
          export ANDROID_HOME="$HOME/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          sudo apt-get update -y
          sudo apt-get install -y unzip wget
          cd "$HOME"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
      - name: Accept licenses and install platforms/build-tools
        run: |
          set -euxo pipefail
          yes | sdkmanager --licenses > /dev/null
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
      - name: Ensure Gradle wrapper
        run: |
          test -f gradle/wrapper/gradle-wrapper.jar || curl -sSL https://raw.githubusercontent.com/gradle/gradle/v8.1.1/gradle/wrapper/gradle-wrapper.jar -o gradle/wrapper/gradle-wrapper.jar
      - name: Grant execute
        run: chmod +x gradlew
      - name: Assemble Debug APK(s)
        run: ./gradlew --no-daemon --stacktrace assembleDebug
      - name: Copy APK(s) into delivery folder
        run: |
          set -euxo pipefail
          mkdir -p final_apk_delivery
          find app/build/outputs/apk -type f -name "*.apk" -print -exec cp -f {} final_apk_delivery/ \;
      - name: Commit and push to main (fallback to branch)
        id: deliver
        env:
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: github-actions@github.com
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: github-actions@github.com
        run: |
          set -euxo pipefail
          git add final_apk_delivery/*.apk || true
          if git commit -m "chore(ci): deliver latest debug APK(s)"; then
            git push origin HEAD:main || {
              echo "main_push_failed=1" >> $GITHUB_OUTPUT
              git switch -c ci/apk-delivery-$(date +%s)
              git push -u origin HEAD
            }
          else
            echo "No APK changes to commit"
          fi